---
name: CI

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup_release:
    name: Setup Release
    outputs:
      changelog_changes: ${{ steps.setup_release.outputs.changelog_changes }}
      changelog_date: ${{ steps.setup_release.outputs.changelog_date }}
      changelog_exists: ${{ steps.setup_release.outputs.changelog_exists }}
      changelog_release_exists: ${{ steps.setup_release.outputs.changelog_release_exists }}
      changelog_url: ${{ steps.setup_release.outputs.changelog_url }}
      changelog_version: ${{ steps.setup_release.outputs.changelog_version }}
      publish_pre_release: ${{ steps.setup_release.outputs.publish_pre_release }}
      publish_release: ${{ steps.setup_release.outputs.publish_release }}
      publish_stable_release: ${{ steps.setup_release.outputs.publish_stable_release }}
      release_body: ${{ steps.setup_release.outputs.release_body }}
      release_build: ${{ steps.setup_release.outputs.release_build }}
      release_commit: ${{ steps.setup_release.outputs.release_commit }}
      release_generate_release_notes: ${{ steps.setup_release.outputs.release_generate_release_notes }}
      release_tag: ${{ steps.setup_release.outputs.release_tag }}
      release_version: ${{ steps.setup_release.outputs.release_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Release
        id: setup_release
        uses: LizardByte/setup-release-action@v2024.516.190324
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - setup_release
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: Plugger.bundle

      - name: Install Python
        uses: LizardByte/setup-python-action@v2023.1210.35516
        with:
          python-version: '2.7'

      - name: Set up Python Dependencies
        shell: bash
        working-directory: Plugger.bundle
        run: |
          echo "Installing Requirements"
          python --version
          python -m pip --no-python-version-warning --disable-pip-version-check install --upgrade pip setuptools wheel

          # install dev requirements
          python -m pip install --upgrade -r requirements-dev.txt

          python -m pip install --upgrade --target=./Contents/Libraries/Shared -r \
            requirements.txt --no-warn-script-location

      - name: Install npm packages
        working-directory: Plugger.bundle
        run: |
          npm install
          mv ./node_modules ./Contents/Resources/web

      - name: Build plist
        working-directory: Plugger.bundle
        env:
          BUILD_VERSION: ${{ needs.setup_release.outputs.release_tag }}
        run: |
          python ./scripts/build_plist.py

      - name: Test Plex Plugin
        # todo - replace with pytest
        working-directory: Plugger.bundle
        run: |
          python ./Contents/Code/__init__.py

      - name: Package Release
        shell: bash
        run: |
          7z \
            "-xr!*.git*" \
            "-xr!*.pyc" \
            "-xr!__pycache__" \
            "-xr!plexhints*" \
            "-xr!Plugger.bundle/.*" \
            "-xr!Plugger.bundle/cache.sqlite" \
            "-xr!Plugger.bundle/DOCKER_README.md" \
            "-xr!Plugger.bundle/Dockerfile" \
            "-xr!Plugger.bundle/docs" \
            "-xr!Plugger.bundle/scripts" \
            "-xr!Plugger.bundle/tests" \
            a "./Plugger.bundle.zip" "Plugger.bundle"

          mkdir artifacts
          mv ./Plugger.bundle.zip ./artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Plugger.bundle
          if-no-files-found: error  # 'warn' or 'ignore' are also available, defaults to `warn`
          path: |
            ${{ github.workspace }}/artifacts

      - name: Create/Update GitHub Release
        if: ${{ needs.setup_release.outputs.publish_release == 'true' }}
        uses: LizardByte/create-release-action@v2023.1210.832
        with:
          allowUpdates: true
          body: ''
          discussionCategory: announcements
          generateReleaseNotes: true
          name: ${{ needs.setup_release.outputs.release_tag }}
          # use pre-release for now
          prerelease: true  # ${{ needs.setup_release.outputs.publish_pre_release }}
          tag: ${{ needs.setup_release.outputs.release_tag }}
          token: ${{ secrets.GH_BOT_TOKEN }}
